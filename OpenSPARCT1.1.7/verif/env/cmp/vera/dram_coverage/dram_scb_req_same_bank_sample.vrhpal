// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: dram_scb_req_same_bank_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
// ***************************************************************************
//
// File:	dram_scb_req_same_bank_sample.vrh
// Description:
// Coverage object to keep track of scrb and req to same bank.
// This object acts like a monitor.
// If there is a req and scrb pending at the same time to 
// same bank (indicated by index i[0-7] for scrb and req,
// then the scrub should go first and then the request.
// Monitor bad transition when the scrb is valid and the
// request goes aways.
//
// ***************************************************************************


// coverage_def dram_scb_req_same_bank_sample (bit [15:0] scb_req + 5 que_pos)
// {

   // scrb issued and request is waiting ( both to the same bank)
     wildcard trans t_scb_req_same_bank_0	        (21'bxxxxxxx1_xxxxxxx1_xxxxx -> 21'bxxxxxxx0_xxxxxxx1_xxxxx);
     wildcard trans t_scb_req_same_bank_1         	(21'bxxxxxx1x_xxxxxx1x_xxxxx -> 21'bxxxxxx0x_xxxxxx1x_xxxxx);
     wildcard trans t_scb_req_same_bank_2        	(21'bxxxxx1xx_xxxxx1xx_xxxxx -> 21'bxxxxx0xx_xxxxx1xx_xxxxx);
     wildcard trans t_scb_req_same_bank_3        	(21'bxxxx1xxx_xxxx1xxx_xxxxx -> 21'bxxxx0xxx_xxxx1xxx_xxxxx);
     wildcard trans t_scb_req_same_bank_4         	(21'bxxx1xxxx_xxx1xxxx_xxxxx -> 21'bxxx0xxxx_xxx1xxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_5         	(21'bxx1xxxxx_xx1xxxxx_xxxxx -> 21'bxx0xxxxx_xx1xxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_6         	(21'bx1xxxxxx_x1xxxxxx_xxxxx -> 21'bx0xxxxxx_x1xxxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_7         	(21'b1xxxxxxx_1xxxxxxx_xxxxx -> 21'b0xxxxxxx_1xxxxxxx_xxxxx);

     wildcard trans t_scb_req_same_bank_00       	(21'bxxxxxxx1_xxxxxxx0_xxxxx -> 21'bxxxxxxx1_xxxxxxx1_xxxxx);
     wildcard trans t_scb_req_same_bank_01       	(21'bxxxxxx1x_xxxxxx0x_xxxxx -> 21'bxxxxxx1x_xxxxxx1x_xxxxx);
     wildcard trans t_scb_req_same_bank_02       	(21'bxxxxx1xx_xxxxx0xx_xxxxx -> 21'bxxxxx1xx_xxxxx1xx_xxxxx);
     wildcard trans t_scb_req_same_bank_03       	(21'bxxxx1xxx_xxxx0xxx_xxxxx -> 21'bxxxx1xxx_xxxx1xxx_xxxxx);
     wildcard trans t_scb_req_same_bank_04       	(21'bxxx1xxxx_xxx0xxxx_xxxxx -> 21'bxxx1xxxx_xxx1xxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_05       	(21'bxx1xxxxx_xx0xxxxx_xxxxx -> 21'bxx1xxxxx_xx1xxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_06       	(21'bx1xxxxxx_x0xxxxxx_xxxxx -> 21'bx1xxxxxx_x1xxxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_07       	(21'b1xxxxxxx_0xxxxxxx_xxxxx -> 21'b1xxxxxxx_1xxxxxxx_xxxxx);

     wildcard trans t_scb_req_same_bank_9       	(21'bxxxxxxx0_xxxxxxx1_xxxxx -> 21'bxxxxxxx1_xxxxxxx1_xxxxx);
     wildcard trans t_scb_req_same_bank_10      	(21'bxxxxxx1x_xxxxxx0x_xxxxx -> 21'bxxxxxx1x_xxxxxx1x_xxxxx);
     wildcard trans t_scb_req_same_bank_11      	(21'bxxxxx1xx_xxxxx0xx_xxxxx -> 21'bxxxxx1xx_xxxxx1xx_xxxxx);
     wildcard trans t_scb_req_same_bank_12      	(21'bxxxx1xxx_xxxx0xxx_xxxxx -> 21'bxxxx1xxx_xxxx1xxx_xxxxx);
     wildcard trans t_scb_req_same_bank_13      	(21'bxxx1xxxx_xxx0xxxx_xxxxx -> 21'bxxx1xxxx_xxx1xxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_14      	(21'bxx1xxxxx_xx0xxxxx_xxxxx -> 21'bxx1xxxxx_xx1xxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_15      	(21'bx1xxxxxx_x0xxxxxx_xxxxx -> 21'bx1xxxxxx_x1xxxxxx_xxxxx);
     wildcard trans t_scb_req_same_bank_16      	(21'b1xxxxxxx_0xxxxxxx_xxxxx -> 21'b1xxxxxxx_1xxxxxxx_xxxxx);

  // req to same bank issued before scrub ( both to the same bank)
  // bad transitions  ( both to the same bank)
  // case when there is scb req already and the req comes on and then scrb is not served
     wildcard bad_trans t_scb_req_same_bank_bad_0       (21'bxxxxxxx1_xxxxxxx0_01010 -> 21'bxxxxxxx1_xxxxxxx1_01010[.1:50.] -> 21'bxxxxxxx1_xxxxxxx0_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_1       (21'bxxxxxx1x_xxxxxx0x_01010 -> 21'bxxxxxx1x_xxxxxx1x_01010[.1:50.] -> 21'bxxxxxx1x_xxxxxx0x_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_2       (21'bxxxxx1xx_xxxxx0xx_01010 -> 21'bxxxxx1xx_xxxxx1xx_01010[.1:50.] -> 21'bxxxxx1xx_xxxxx0xx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_3       (21'bxxxx1xxx_xxxx0xxx_01010 -> 21'bxxxx1xxx_xxxx1xxx_01010[.1:50.] -> 21'bxxxx1xxx_xxxx0xxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_4       (21'bxxx1xxxx_xxx0xxxx_01010 -> 21'bxxx1xxxx_xxx1xxxx_01010[.1:50.] -> 21'bxxx1xxxx_xxx0xxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_5       (21'bxx1xxxxx_xx0xxxxx_01010 -> 21'bxx1xxxxx_xx1xxxxx_01010[.1:50.] -> 21'bxx1xxxxx_xx0xxxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_6       (21'bx1xxxxxx_x0xxxxxx_01010 -> 21'bx1xxxxxx_x1xxxxxx_01010[.1:50.] -> 21'bx1xxxxxx_x0xxxxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_7       (21'b1xxxxxxx_0xxxxxxx_01010 -> 21'b1xxxxxxx_1xxxxxxx_01010[.1:50.] -> 21'b1xxxxxxx_0xxxxxxx_01010);

   // case when req is there and then scrb req comes, req is not served for 2 cycles, then the scrb should
   // be served first and then req served
     wildcard bad_trans t_scb_req_same_bank_bad_9       (21'bxxxxxxx0_xxxxxxx1_01010 -> 21'bxxxxxxx1_xxxxxxx1_01010[.2:50.] -> 21'bxxxxxxx1_xxxxxxx0_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_10      (21'bxxxxxx1x_xxxxxx0x_01010 -> 21'bxxxxxx1x_xxxxxx1x_01010[.2:50.] -> 21'bxxxxxx1x_xxxxxx0x_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_11      (21'bxxxxx1xx_xxxxx0xx_01010 -> 21'bxxxxx1xx_xxxxx1xx_01010[.2:50.] -> 21'bxxxxx1xx_xxxxx0xx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_12      (21'bxxxx1xxx_xxxx0xxx_01010 -> 21'bxxxx1xxx_xxxx1xxx_01010[.2:50.] -> 21'bxxxx1xxx_xxxx0xxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_13      (21'bxxx1xxxx_xxx0xxxx_01010 -> 21'bxxx1xxxx_xxx1xxxx_01010[.2:50.] -> 21'bxxx1xxxx_xxx0xxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_14      (21'bxx1xxxxx_xx0xxxxx_01010 -> 21'bxx1xxxxx_xx1xxxxx_01010[.2:50.] -> 21'bxx1xxxxx_xx0xxxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_15      (21'bx1xxxxxx_x0xxxxxx_01010 -> 21'bx1xxxxxx_x1xxxxxx_01010[.2:50.] -> 21'bx1xxxxxx_x0xxxxxx_01010);
     wildcard bad_trans t_scb_req_same_bank_bad_21      (21'b1xxxxxxx_0xxxxxxx_01010 -> 21'b1xxxxxxx_1xxxxxxx_01010[.2:50.] -> 21'b1xxxxxxx_0xxxxxxx_01010);
// }
