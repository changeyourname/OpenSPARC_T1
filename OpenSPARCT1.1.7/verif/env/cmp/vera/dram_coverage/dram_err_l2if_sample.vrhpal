// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: dram_err_l2if_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
// ***************************************************************************
//
// File:        dram_err_l2if_sample.vrh
// Description:
// Coverage object for error indication signals on L2 interface.
//
// ***************************************************************************


// coverage_def dram_err_l2if_sample (bit [4:0] secc_pa_mecc_scb_secc_mecc)
// {

  // state declarations
       wildcard state s_secc_0		(5'b0xxxx);
       wildcard state s_secc_1		(5'b1xxxx);
       wildcard state s_pa_0		(5'bx0xxx);
       wildcard state s_pa_1		(5'bx1xxx);
       wildcard state s_mecc_0		(5'bxx0xx);
       wildcard state s_mecc_1		(5'bxx1xx);
       wildcard state s_scb_secc_0  	(5'bxxx0x);
       wildcard state s_scb_secc_1  	(5'bxxx1x);
       wildcard state s_scb_mecc_0  	(5'bxxxx0);
       wildcard state s_scb_mecc_1  	(5'bxxxx1);

       wildcard trans t_secc_0_0  	(5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_secc_0_1  	(5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_secc_1_1  	(5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_secc_1_0  	(5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_pa_0_0  	(5'bx0xxx -> 5'bx0xxx);
       wildcard trans t_pa_0_1  	(5'bx0xxx -> 5'bx1xxx);
       wildcard trans t_pa_1_1  	(5'bx1xxx -> 5'bx1xxx);
       wildcard trans t_pa_1_0  	(5'bx1xxx -> 5'bx0xxx);
       wildcard trans t_mecc_0_0  	(5'bxx0xx -> 5'bxx0xx);
       wildcard trans t_mecc_0_1  	(5'bxx0xx -> 5'bxx1xx);
       wildcard trans t_mecc_1_1  	(5'bxx1xx -> 5'bxx1xx);
       wildcard trans t_mecc_1_0  	(5'bxx1xx -> 5'bxx0xx);
       wildcard trans t_scb_secc_0_0  	(5'bxxx0x -> 5'bxxx0x);
       wildcard trans t_scb_secc_0_1  	(5'bxxx0x -> 5'bxxx1x);
       wildcard trans t_scb_secc_1_1  	(5'bxxx1x -> 5'bxxx1x);
       wildcard trans t_scb_secc_1_0  	(5'bxxx1x -> 5'bxxx0x);
       wildcard trans t_scb_mecc_0_0  	(5'bxxxx0 -> 5'bxxxx0);
       wildcard trans t_scb_mecc_0_1  	(5'bxxxx0 -> 5'bxxxx1);
       wildcard trans t_scb_mecc_1_1  	(5'bxxxx1 -> 5'bxxxx1);
       wildcard trans t_scb_mecc_1_0  	(5'bxxxx1 -> 5'bxxxx0);

       // Combinations
       wildcard trans t_secc_00_00  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_secc_00_01  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_secc_00_10  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_secc_00_11  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_secc_01_00  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_secc_01_01  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_secc_01_10  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_secc_01_11  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_secc_10_00  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_secc_10_10  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_secc_10_01  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_secc_10_11  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_secc_11_00  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_secc_11_01  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_secc_11_10  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_secc_11_11  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);

       wildcard trans t_pa_00_00  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_pa_00_01  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_pa_00_10  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_pa_00_11  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_pa_01_00  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_pa_01_01  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_pa_01_10  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_pa_01_11  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_pa_10_00  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_pa_10_10  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_pa_10_01  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_pa_10_11  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_pa_11_00  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_pa_11_01  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_pa_11_10  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_pa_11_11  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);

       wildcard trans t_mecc_00_00  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_00_01  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_00_10  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_00_11  	(5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_01_00  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_01_01  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_01_10  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_01_11  	(5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_10_00  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_10_10  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_10_01  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_10_11  	(5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_11_00  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_11_01  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_mecc_11_10  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_mecc_11_11  	(5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);

       wildcard trans t_scb_secc_00_00  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_00_01  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_00_10  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_00_11  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_01_00  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_01_01  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_01_10  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_01_11  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_10_00  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_10_10  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_10_01  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_10_11  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_11_00  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_11_01  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_secc_11_10  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_secc_11_11  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);

       wildcard trans t_scb_mecc_00_00  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_00_01  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_00_10  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_00_11  (5'b0xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_01_00  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_01_01  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_01_10  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_01_11  (5'b0xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_10_00  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_10_10  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_10_01  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_10_11  (5'b1xxxx -> 5'b0xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_11_00  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_11_01  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b0xxxx -> 5'b1xxxx);
       wildcard trans t_scb_mecc_11_10  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b0xxxx);
       wildcard trans t_scb_mecc_11_11  (5'b1xxxx -> 5'b1xxxx -> 5'bxxxxx[.1:5.] -> 5'b1xxxx -> 5'b1xxxx);

  // bad states
  //bad_state s_not_rd_q_full_n_req_state (not state);
   wildcard bad_state s_mecc_secc_bad_0		(5'b1x1xx);

  // bad transitions
  //bad_trans t_not_rd_q_full_n_req_trans (not trans);

//}

