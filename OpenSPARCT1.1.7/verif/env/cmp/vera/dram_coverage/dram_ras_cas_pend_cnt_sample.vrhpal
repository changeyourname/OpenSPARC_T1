// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: dram_ras_cas_pend_cnt_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
// ***************************************************************************
//
// File:        dram_ras_cas_pend_cnt_sample.vrh
// Description:
// Coverage object for the RAS and CAS pending counts
// These 2 counts have no relation, they are combined for
// no special reason.
// Try to observe if ras pend and cas pending touches all the counts.
// No tran are of intrest
//
// ***************************************************************************


// coverage_def dram_ras_cas_pend_cnt_sample (bit [7:0] ras_cas_pend_cnt)
// {

  // state declarations
      wildcard state s_ras_cnt0  (8'b0000_xxxx);
      wildcard state s_ras_cnt1  (8'b0001_xxxx);
      wildcard state s_ras_cnt2  (8'b0010_xxxx);
      wildcard state s_ras_cnt3  (8'b0011_xxxx);
      wildcard state s_ras_cnt4  (8'b0100_xxxx);
      wildcard state s_ras_cnt5  (8'b0101_xxxx);
      wildcard state s_ras_cnt6  (8'b0110_xxxx);
      wildcard state s_ras_cnt7  (8'b0111_xxxx);
      wildcard state s_ras_cnt8  (8'b1000_xxxx);

      wildcard state s_cas_cnt0  (8'bxxxx_0000);
      wildcard state s_cas_cnt1  (8'bxxxx_0001);
      wildcard state s_cas_cnt2  (8'bxxxx_0010);
      wildcard state s_cas_cnt3  (8'bxxxx_0011);
      wildcard state s_cas_cnt4  (8'bxxxx_0100);
      wildcard state s_cas_cnt5  (8'bxxxx_0101);
      wildcard state s_cas_cnt6  (8'bxxxx_0110);
      wildcard state s_cas_cnt7  (8'bxxxx_0111);
      wildcard state s_cas_cnt8  (8'bxxxx_1000);
//}

