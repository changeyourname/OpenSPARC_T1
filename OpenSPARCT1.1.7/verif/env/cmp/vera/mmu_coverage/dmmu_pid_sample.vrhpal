// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: dmmu_pid_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
// ***************************************************************************
//
// State machine coverage for MMU Sync ASI Ops
//
//
// ***************************************************************************




// coverage_def TTE_ATTRIBUTES_COV (bit [44:0] tte_attributes_state)
// {
  // state declarations

    wildcard state s_PID0        (PID0) ;
    wildcard state s_PID1        (PID1) ;
    wildcard state s_PID2        (PID2) ;
    wildcard state s_PID3        (PID3) ;
    wildcard state s_PID4        (PID4) ;
    wildcard state s_PID5        (PID5) ;
    wildcard state s_PID6        (PID6) ;
    wildcard state s_PID7        (PID7) ;

//    wildcard state s_PID0        (PID0) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID1        (PID1) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID2        (PID2) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID3        (PID3) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID4        (PID4) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID5        (PID5) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID6        (PID6) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);
//    wildcard state s_PID7        (PID7) if(mmu_coverage_ifc.C${c}_cam_vld && mmu_coverage_ifc.C${c}_tlb_cam_hit);

  // bad states

  // bad transitions

// }
