// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: spu_rc4ctl_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>
#include "spu_rtl.vrh"

#ifndef INC__TMP_spu_rc4ctl_COV_VRH
#define INC__TMP_spu_rc4ctl_COV_VRH

#define RC4CTL_IDLE_STATE		`RC4CTL_STATE_WIDTH'b1000_0000_0000_0000
#define RC4CTL_RC4DATRDY_STATE		`RC4CTL_STATE_WIDTH'b0100_0000_0000_0000
#define RC4CTL_RC4REQDAT_STATE		`RC4CTL_STATE_WIDTH'b0010_0000_0000_0000
#define RC4CTL_WAIT4LN_STATE		`RC4CTL_STATE_WIDTH'b0001_0000_0000_0000
#define RC4CTL_WAIT4DATAREG_STATE	`RC4CTL_STATE_WIDTH'b0000_1000_0000_0000
#define RC4CTL_PRERDSX_STATE		`RC4CTL_STATE_WIDTH'b0000_0100_0000_0000
#define RC4CTL_RDSX_STATE		`RC4CTL_STATE_WIDTH'b0000_0010_0000_0000
#define RC4CTL_YGEN_STATE		`RC4CTL_STATE_WIDTH'b0000_0001_0000_0000
#define RC4CTL_RDSY_STATE               `RC4CTL_STATE_WIDTH'b0000_0000_1000_0000
#define RC4CTL_WRX_STATE                `RC4CTL_STATE_WIDTH'b0000_0000_0100_0000
#define RC4CTL_WRY_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0010_0000
#define RC4CTL_RDK_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0001_0000
#define RC4CTL_RDK_DLY_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0000_1000
#define RC4CTL_STREQ_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0000_0100
#define RC4CTL_RC4SHADEC_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0000_0010
#define RC4CTL_WAIT4PFLD_STATE		`RC4CTL_STATE_WIDTH'b0000_0000_0000_0001

#endif

sample spu_rc4ctl_sample_bind_C${c}.\$rc4ctl_state {
  //state declarations
  state s_RC4CTL_IDLE_STATE		(RC4CTL_IDLE_STATE);
  state s_RC4CTL_RC4DATRDY_STATE	(RC4CTL_RC4DATRDY_STATE);
  state s_RC4CTL_RC4REQDAT_STATE	(RC4CTL_RC4REQDAT_STATE);
  state s_RC4CTL_WAIT4LN_STATE		(RC4CTL_WAIT4LN_STATE);
  state s_RC4CTL_WAIT4DATAREG_STATE	(RC4CTL_WAIT4DATAREG_STATE);
  state s_RC4CTL_PRERDSX_STATE		(RC4CTL_PRERDSX_STATE);
  state s_RC4CTL_RDSX_STATE		(RC4CTL_RDSX_STATE);
  state s_RC4CTL_YGEN_STATE		(RC4CTL_YGEN_STATE);
  state s_RC4CTL_RDSY_STATE             (RC4CTL_RDSY_STATE);
  state s_RC4CTL_WRX_STATE              (RC4CTL_WRX_STATE);
  state s_RC4CTL_WRY_STATE              (RC4CTL_WRY_STATE);
  state s_RC4CTL_RDK_STATE		(RC4CTL_RDK_STATE);
  state s_RC4CTL_RDK_DLY_STATE		(RC4CTL_RDK_DLY_STATE);
  state s_RC4CTL_STREQ_STATE		(RC4CTL_STREQ_STATE);
  state s_RC4CTL_RC4SHADEC_STATE	(RC4CTL_RC4SHADEC_STATE);
  state s_RC4CTL_WAIT4PFLD_STATE	(RC4CTL_WAIT4PFLD_STATE);

  bad_state s_not_RC4CTL_STATE (not state);

  // Transitions to RC4CTL_IDLE_STATE

  trans t_RC4CTL_IDLE_2_IDLE_STATE (RC4CTL_IDLE_STATE -> RC4CTL_IDLE_STATE);
  trans t_RC4CTL_STREQ_2_IDLE_STATE (RC4CTL_STREQ_STATE -> RC4CTL_IDLE_STATE);
  trans t_RC4CTL_RC4SHADEC_2_IDLE_STATE (RC4CTL_RC4SHADEC_STATE -> RC4CTL_IDLE_STATE);
  trans t_RC4CTL_RC4DATRDY_2_IDLE_STATE (RC4CTL_RC4DATRDY_STATE -> RC4CTL_IDLE_STATE);

  // Transitions to RC4CTL_RC4DATRDY_STATE
  trans t_RC4CTL_RC4DATRDY_2_RC4DATRDY_STATE (RC4CTL_RC4DATRDY_STATE -> RC4CTL_RC4DATRDY_STATE);
  trans t_RC4CTL_IDLE_2_RC4DATRDY_STATE (RC4CTL_IDLE_STATE -> RC4CTL_RC4DATRDY_STATE);
  trans t_RC4CTL_STREQ_2_RC4DATRDY_STATE (RC4CTL_STREQ_STATE -> RC4CTL_RC4DATRDY_STATE);
  trans t_RC4CTL_RC4SHADEC_2_RC4DATRDY_STATE (RC4CTL_RC4SHADEC_STATE -> RC4CTL_RC4DATRDY_STATE);
  trans t_RC4CTL_RDK_2_RC4DATRDY_STATE (RC4CTL_RDK_STATE -> RC4CTL_RC4DATRDY_STATE);
  trans t_RC4CTL_WAIT4PFLD_2_RC4DATRDY_STATE (RC4CTL_WAIT4PFLD_STATE -> RC4CTL_RC4DATRDY_STATE);

  // Transitions to RC4CTL_RC4REQDAT_STATE
  trans t_RC4CTL_RC4REQDAT_2_RC4REQDAT_STATE (RC4CTL_RC4REQDAT_STATE -> RC4CTL_RC4REQDAT_STATE);
  trans t_RC4CTL_RC4DATRDY_2_RC4REQDAT_STATE (RC4CTL_RC4DATRDY_STATE -> RC4CTL_RC4REQDAT_STATE);

  // Transitions to RC4CTL_WAIT4LN_STATE
  trans t_RC4CTL_WAIT4LN_2_WAIT4LN_STATE (RC4CTL_WAIT4LN_STATE -> RC4CTL_WAIT4LN_STATE);
  trans t_RC4CTL_RC4REQDAT_2_WAIT4LN_STATE (RC4CTL_RC4REQDAT_STATE -> RC4CTL_WAIT4LN_STATE);

  // Transitions to RC4CTL_WAIT4DATAREG_STATE
  trans t_RC4CTL_WAIT4DATAREG_2_WAIT4DATAREG_STATE (RC4CTL_WAIT4DATAREG_STATE -> RC4CTL_WAIT4DATAREG_STATE);
  trans t_RC4CTL_RC4DATRDY_2_WAIT4DATAREG_STATE (RC4CTL_RC4DATRDY_STATE -> RC4CTL_WAIT4DATAREG_STATE);

  // Transitions to RC4CTL_PRERDSX_STATE
  trans t_RC4CTL_WAIT4LN_2_PRERDSX_STATE (RC4CTL_WAIT4LN_STATE -> RC4CTL_PRERDSX_STATE);
  trans t_RC4CTL_RC4DATRDY_2_PRERDSX_STATE (RC4CTL_RC4DATRDY_STATE -> RC4CTL_PRERDSX_STATE);
  trans t_RC4CTL_WAIT4DATAREG_2_PRERDSX_STATE (RC4CTL_WAIT4DATAREG_STATE -> RC4CTL_PRERDSX_STATE);

  // Transitions to RC4CTL_RDSX_STATE
  trans t_RC4CTL_PRERDSX_2_RDSX_STATE (RC4CTL_PRERDSX_STATE -> RC4CTL_RDSX_STATE);
  trans t_RC4CTL_RDK_2_RDSX_STATE (RC4CTL_RDK_STATE -> RC4CTL_RDSX_STATE);

  // Transitions to RC4CTL_YGEN_STATE
  trans t_RC4CTL_RDSX_2_YGEN_STATE (RC4CTL_RDSX_STATE -> RC4CTL_YGEN_STATE);

  // Transitions to RC4CTL_RDSY_STATE
  trans t_RC4CTL_YGEN_2_RDSY_STATE (RC4CTL_YGEN_STATE -> RC4CTL_RDSY_STATE);

  // Transitions to RC4CTL_WRY_STATE
  trans t_RC4CTL_RDSY_2_WRY_STATE (RC4CTL_RDSY_STATE -> RC4CTL_WRY_STATE);

  // Transitions to RC4CTL_WRX_STATE
  trans t_RC4CTL_WRY_2_WRX_STATE (RC4CTL_WRY_STATE -> RC4CTL_WRX_STATE);

  // Transitions to RC4CTL_RDK_STATE
  trans t_RC4CTL_WRX_2_RDK_STATE (RC4CTL_WRX_STATE -> RC4CTL_RDK_STATE);

  // Transitions to RC4CTL_RDK_DLY_STATE
  trans t_RC4CTL_RDK_2_RDK_DLY_STATE (RC4CTL_RDK_STATE -> RC4CTL_RDK_DLY_STATE);

  // Transitions to RC4CTL_STREQ_STATE
  trans t_RC4CTL_STREQ_2_STREQ_STATE (RC4CTL_STREQ_STATE -> RC4CTL_STREQ_STATE);
  trans t_RC4CTL_RDK_DLY_2_STREQ_STATE (RC4CTL_RDK_DLY_STATE -> RC4CTL_STREQ_STATE);

  // Transitions to RC4CTL_RC4SHADEC_STATE
  trans t_RC4CTL_RC4SHADEC_2_RC4SHADEC_STATE (RC4CTL_RC4SHADEC_STATE -> RC4CTL_RC4SHADEC_STATE);
  trans t_RC4CTL_STREQ_2_RC4SHADEC_STATE (RC4CTL_STREQ_STATE -> RC4CTL_RC4SHADEC_STATE);

  // Transitions to RC4CTL_WAIT4PFLD_STATE
  trans t_RC4CTL_WAIT4PFLD_2_WAIT4PFLD_STATE (RC4CTL_WAIT4PFLD_STATE -> RC4CTL_WAIT4PFLD_STATE);
  trans t_RC4CTL_STREQ_2_WAIT4PFLD_STATE (RC4CTL_STREQ_STATE -> RC4CTL_WAIT4PFLD_STATE);
  trans t_RC4CTL_RC4SHADEC_2_WAIT4PFLD_STATE (RC4CTL_RC4SHADEC_STATE -> RC4CTL_WAIT4PFLD_STATE);
  
  bad_trans t_not_RC4CTL_TRANS (not trans);
}
