// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: spu_rc4ld_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>
#include "spu_rtl.vrh"

#ifndef INC__TMP_spu_rc4ld_COV_VRH
#define INC__TMP_spu_rc4ld_COV_VRH
#define RC4LD_IDLELD_STATE		`RC4LD_STATE_WIDTH'b10_0000
#define RC4LD_LDREQ_STATE		`RC4LD_STATE_WIDTH'b01_0000
#define RC4LD_WAIT4LN_STATE		`RC4LD_STATE_WIDTH'b00_1000
#define RC4LD_RC4MEMWR_STATE		`RC4LD_STATE_WIDTH'b00_0100
#define RC4LD_RC4WRX_STATE		`RC4LD_STATE_WIDTH'b00_0010
#define RC4LD_RC4WRY_STATE		`RC4LD_STATE_WIDTH'b00_0001

#endif
sample spu_rc4ld_sample_bind_C${c}.\$rc4ld_state {
  //state declarations
  state s_RC4LD_IDLELD_STATE		(RC4LD_IDLELD_STATE);
  state s_RC4LD_LDREQ_STATE		(RC4LD_LDREQ_STATE);
  state s_RC4LD_WAIT4LN_STATE		(RC4LD_WAIT4LN_STATE);
  state s_RC4LD_RC4MEMWR_STATE		(RC4LD_RC4MEMWR_STATE);
  state s_RC4LD_RC4WRX_STATE		(RC4LD_RC4WRX_STATE);
  state s_RC4LD_RC4WRY_STATE		(RC4LD_RC4WRY_STATE);

  bad_state s_not_RC4LD_STATE (not state);

  // Transitions to RC4LD_IDLELD_STATE

  trans t_RC4LD_IDLELD_2_IDLELD_STATE (RC4LD_IDLELD_STATE -> RC4LD_IDLELD_STATE);
  trans t_RC4LD_RC4WRY_2_IDLELD_STATE (RC4LD_RC4WRY_STATE -> RC4LD_IDLELD_STATE);

  // Transitions to RC4LD_LDREQ_STATE

  trans t_RC4LD_LDREQ_2_LDREQ_STATE (RC4LD_LDREQ_STATE -> RC4LD_LDREQ_STATE);
  trans t_RC4LD_IDLELD_2_LDREQ_STATE (RC4LD_IDLELD_STATE -> RC4LD_LDREQ_STATE);
  trans t_RC4LD_RC4MEMWR_2_LDREQ_STATE (RC4LD_RC4MEMWR_STATE -> RC4LD_LDREQ_STATE);

  // Transitions to RC4LD_WAIT4LN_STATE

  trans t_RC4LD_WAIT4LN_2_WAIT4LN_STATE (RC4LD_WAIT4LN_STATE -> RC4LD_WAIT4LN_STATE);
  trans t_RC4LD_LDREQ_2_WAIT4LN_STATE (RC4LD_LDREQ_STATE -> RC4LD_WAIT4LN_STATE);

  // Transitions to RC4LD_RC4MEMWR_STATE

  trans t_RC4LD_RC4MEMWR_2_RC4MEMWR_STATE (RC4LD_RC4MEMWR_STATE -> RC4LD_RC4MEMWR_STATE);
  trans t_RC4LD_WAIT4LN_2_RC4MEMWR_STATE (RC4LD_WAIT4LN_STATE -> RC4LD_RC4MEMWR_STATE);

  // Transitions to RC4LD_RC4WRX_STATE

  trans t_RC4LD_WAIT4LN_2_RC4WRX_STATE (RC4LD_WAIT4LN_STATE -> RC4LD_RC4WRX_STATE);
  trans t_RC4LD_RC4MEMWR_2_RC4WRX_STATE (RC4LD_RC4MEMWR_STATE -> RC4LD_RC4WRX_STATE);

  // Transitions to RC4LD_RC4WRY_STATE

  trans t_RC4LD_RC4WRX_2_RC4WRY_STATE (RC4LD_RC4WRX_STATE -> RC4LD_RC4WRY_STATE);

  bad_trans t_not_RC4LD_TRANS (not trans);
}
