// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: spu_mamul_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
#include <vera_defines.vrh>
#include "spu_rtl.vrh"

#ifndef INC__TMP_spu_mamul_COV_VRH
#define INC__TMP_spu_mamul_COV_VRH
#define MAMUL_IDLE_STATE                    `MA_MUL_STATE_WIDTH'b100_0000_0000_0000_0000
#define MAMUL_TR2ILOOPA_FRM_IDLE_DLY        `MA_MUL_STATE_WIDTH'b010_0000_0000_0000_0000
#define MAMUL_ILOOPA_STATE	            `MA_MUL_STATE_WIDTH'b001_0000_0000_0000_0000
#define MAMUL_ILOOPB_STATE	            `MA_MUL_STATE_WIDTH'b000_1000_0000_0000_0000
#define MAMUL_ILOOPN_STATE	            `MA_MUL_STATE_WIDTH'b000_0100_0000_0000_0000
#define MAMUL_JLOOPA_STATE                  `MA_MUL_STATE_WIDTH'b000_0010_0000_0000_0000
#define MAMUL_JLOOPB_STATE                  `MA_MUL_STATE_WIDTH'b000_0001_0000_0000_0000
#define MAMUL_JLOOPM_STATE                  `MA_MUL_STATE_WIDTH'b000_0000_1000_0000_0000
#define MAMUL_JLOOPN_STATE                  `MA_MUL_STATE_WIDTH'b000_0000_0100_0000_0000
#define MAMUL_MWRITE_STATE                  `MA_MUL_STATE_WIDTH'b000_0000_0010_0000_0000
#define MAMUL_NPRIME_STATE                  `MA_MUL_STATE_WIDTH'b000_0000_0001_0000_0000
#define MAMUL_ACCUMSHFT_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_1000_0000
#define MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY   `MA_MUL_STATE_WIDTH'b000_0000_0000_0100_0000
#define MAMUL_RESULT_C1_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_0010_0000
#define MAMUL_RESULT_C2_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_0001_0000
#define MAMUL_RESULT_C3_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_0000_1000
#define MAMUL_RESULT_C4_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_0000_0100
#define MAMUL_RESULT_C5_STATE               `MA_MUL_STATE_WIDTH'b000_0000_0000_0000_0010
#define MAMUL_TR2MWRITE_FRM_ACCUMSHFT_STATE `MA_MUL_STATE_WIDTH'b000_0000_0000_0000_0001

#endif
sample spu_mamul_sample_bind_C${c}.\$ma_mul_state {
  //state declarations

  state s_MAMUL_IDLE_STATE	 (MAMUL_IDLE_STATE);
  state s_MAMUL_TR2ILOOPA_FRM_IDLE_DLY (MAMUL_TR2ILOOPA_FRM_IDLE_DLY);
  state s_MAMUL_ILOOPA_STATE	 (MAMUL_ILOOPA_STATE);
  state s_MAMUL_ILOOPB_STATE	 (MAMUL_ILOOPB_STATE);
  state s_MAMUL_ILOOPN_STATE	 (MAMUL_ILOOPN_STATE);
  state s_MAMUL_JLOOPA_STATE	 (MAMUL_JLOOPA_STATE);
  state s_MAMUL_JLOOPB_STATE	 (MAMUL_JLOOPB_STATE);
  state s_MAMUL_JLOOPM_STATE	 (MAMUL_JLOOPM_STATE);
  state s_MAMUL_JLOOPN_STATE	 (MAMUL_JLOOPN_STATE);
  state s_MAMUL_MWRITE_STATE	 (MAMUL_MWRITE_STATE);
  state s_MAMUL_NPRIME_STATE	 (MAMUL_NPRIME_STATE);
  state s_MAMUL_ACCUMSHFT_STATE	(MAMUL_ACCUMSHFT_STATE);
  state s_MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY (MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY);
  state s_MAMUL_RESULT_C1_STATE	(MAMUL_RESULT_C1_STATE);
  state s_MAMUL_RESULT_C2_STATE	(MAMUL_RESULT_C2_STATE);
  state s_MAMUL_RESULT_C3_STATE	(MAMUL_RESULT_C3_STATE);
  state s_MAMUL_RESULT_C4_STATE	(MAMUL_RESULT_C4_STATE);
  state s_MAMUL_RESULT_C5_STATE	(MAMUL_RESULT_C5_STATE);
  state s_MAMUL_TR2MWRITE_FRM_ACCUMSHFT_STATE	(MAMUL_TR2MWRITE_FRM_ACCUMSHFT_STATE);

  bad_state s_not_MAMUL_STATE (not state);

  // transitions

  trans t_MAMUL_IDLE_2_IDLE_STATE (MAMUL_IDLE_STATE -> MAMUL_IDLE_STATE);
  trans t_MAMUL_ACCUMSHFT_2_IDLE_STATE (MAMUL_ACCUMSHFT_STATE -> MAMUL_IDLE_STATE);

  trans t_MAMUL_IDLE_2_TR2ILOOPA_FRM_IDLE_DLY (MAMUL_IDLE_STATE -> MAMUL_TR2ILOOPA_FRM_IDLE_DLY);
  
  trans t_MAMUL_TR2ILOOPA_FRM_IDLE_DLY_2_ILOOPA_STATE (MAMUL_TR2ILOOPA_FRM_IDLE_DLY -> MAMUL_ILOOPA_STATE);
  trans t_MAMUL_JLOOPN_2_ILOOPA_STATE (MAMUL_JLOOPN_STATE -> MAMUL_ILOOPA_STATE);

  trans t_MAMUL_ILOOPB_2_ILOOPB_STATE (MAMUL_ILOOPB_STATE -> MAMUL_ILOOPB_STATE);
  trans t_MAMUL_ILOOPA_2_ILOOPB_STATE (MAMUL_ILOOPA_STATE -> MAMUL_ILOOPB_STATE);

  trans t_MAMUL_ILOOPN_2_ILOOPN_STATE (MAMUL_ILOOPN_STATE -> MAMUL_ILOOPN_STATE);
  trans t_MAMUL_MWRITE_2_ILOOPN_STATE (MAMUL_MWRITE_STATE -> MAMUL_ILOOPN_STATE);

  trans t_MAMUL_ACCUMSHFT_2_TR2JLOOPA_FRM_ACCUMSHFT_DLY (MAMUL_ACCUMSHFT_STATE -> MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY);
  
  trans t_MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY_2_JLOOPA_STATE (MAMUL_TR2JLOOPA_FRM_ACCUMSHFT_DLY -> MAMUL_JLOOPA_STATE);
  trans t_MAMUL_JLOOPN_2_JLOOPA_STATE (MAMUL_JLOOPN_STATE -> MAMUL_JLOOPA_STATE);

  trans t_MAMUL_JLOOPB_2_JLOOPB_STATE (MAMUL_JLOOPB_STATE -> MAMUL_JLOOPB_STATE);
  trans t_MAMUL_JLOOPA_2_JLOOPB_STATE (MAMUL_JLOOPA_STATE -> MAMUL_JLOOPB_STATE);

  trans t_MAMUL_JLOOPB_2_JLOOPM_STATE (MAMUL_JLOOPB_STATE -> MAMUL_JLOOPM_STATE);

  trans t_MAMUL_JLOOPN_2_JLOOPN_STATE (MAMUL_JLOOPN_STATE -> MAMUL_JLOOPN_STATE);
  trans t_MAMUL_JLOOPM_2_JLOOPN_STATE (MAMUL_JLOOPM_STATE -> MAMUL_JLOOPN_STATE);

  trans t_MAMUL_TR2MWRITE_FRM_ACCUMSHFT_2_MWRITE_STATE (MAMUL_TR2MWRITE_FRM_ACCUMSHFT_STATE -> MAMUL_MWRITE_STATE);
  trans t_MAMUL_RESULT_C5_2_MWRITE_STATE (MAMUL_RESULT_C5_STATE -> MAMUL_MWRITE_STATE);

  trans t_MAMUL_ILOOPB_2_NPRIME_STATE (MAMUL_ILOOPB_STATE -> MAMUL_NPRIME_STATE);
  trans t_MAMUL_NPRIME_2_NPRIME_STATE (MAMUL_NPRIME_STATE -> MAMUL_NPRIME_STATE);

  trans t_MAMUL_ACCUMSHFT_2_ACCUMSHFT_STATE (MAMUL_ACCUMSHFT_STATE -> MAMUL_ACCUMSHFT_STATE);
  trans t_MAMUL_MWRITE_2_ACCUMSHFT_STATE (MAMUL_MWRITE_STATE -> MAMUL_ACCUMSHFT_STATE);
  trans t_MAMUL_ILOOPN_2_ACCUMSHFT_STATE (MAMUL_ILOOPN_STATE -> MAMUL_ACCUMSHFT_STATE);

  trans t_MAMUL_NPRIME_2_RESULT_C1_STATE (MAMUL_NPRIME_STATE -> MAMUL_RESULT_C1_STATE);
  trans t_MAMUL_JLOOPN_2_RESULT_C1_STATE (MAMUL_JLOOPN_STATE -> MAMUL_RESULT_C1_STATE);

  trans t_MAMUL_RESULT_C1_2_RESULT_C2_STATE (MAMUL_RESULT_C1_STATE -> MAMUL_RESULT_C2_STATE);
  trans t_MAMUL_RESULT_C2_2_RESULT_C3_STATE (MAMUL_RESULT_C2_STATE -> MAMUL_RESULT_C3_STATE);
  trans t_MAMUL_RESULT_C3_2_RESULT_C4_STATE (MAMUL_RESULT_C3_STATE -> MAMUL_RESULT_C4_STATE);
  trans t_MAMUL_RESULT_C4_2_RESULT_C5_STATE (MAMUL_RESULT_C4_STATE -> MAMUL_RESULT_C5_STATE);

  trans t_MAMUL_ACCUMSHFT_2_TR2MWRITE_FRM_ACCUMSHFT_STATE (MAMUL_ACCUMSHFT_STATE -> MAMUL_TR2MWRITE_FRM_ACCUMSHFT_STATE);

  //bad_trans t_not_MAMUL_TRANS (not trans);
}
 
