// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: cmpl2_stalled_scrub1_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================

// l2_stalled_scrub1_state[20:0] = {18 stall bits, arbctl_inst_vld_c1, arbctl_inst_fb_c1, arbdp_inst_tecc_c1};

// Tag scrub                {1 hot stall bits}
wildcard trans TagScrub_17({       1'b1, 17'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_16({ 1'bx, 1'b1, 16'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_15({ 2'bx, 1'b1, 15'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_14({ 3'bx, 1'b1, 14'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_13({ 4'bx, 1'b1, 13'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_12({ 5'bx, 1'b1, 12'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_11({ 6'bx, 1'b1, 11'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_10({ 7'bx, 1'b1, 10'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_09({ 8'bx, 1'b1,  9'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_08({ 9'bx, 1'b1,  8'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_07({10'bx, 1'b1,  7'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_06({11'bx, 1'b1,  6'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_05({12'bx, 1'b1,  5'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_04({13'bx, 1'b1,  4'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_03({14'bx, 1'b1,  3'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_02({15'bx, 1'b1,  2'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_01({16'bx, 1'b1,  1'bx, 3'bx} -> {18'bx, 3'b101});
wildcard trans TagScrub_00({17'bx, 1'b1,        3'bx} -> {18'bx, 3'b101});

// Data scrub                {1 hot stall bits}
wildcard trans DataScrub_17({       1'b1, 17'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_16({ 1'bx, 1'b1, 16'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_15({ 2'bx, 1'b1, 15'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_14({ 3'bx, 1'b1, 14'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_13({ 4'bx, 1'b1, 13'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_12({ 5'bx, 1'b1, 12'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_11({ 6'bx, 1'b1, 11'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_10({ 7'bx, 1'b1, 10'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_09({ 8'bx, 1'b1,  9'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_08({ 9'bx, 1'b1,  8'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_07({10'bx, 1'b1,  7'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_06({11'bx, 1'b1,  6'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_05({12'bx, 1'b1,  5'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_04({13'bx, 1'b1,  4'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_03({14'bx, 1'b1,  3'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_02({15'bx, 1'b1,  2'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_01({16'bx, 1'b1,  1'bx, 3'bx} -> {18'bx, 3'b111});
wildcard trans DataScrub_00({17'bx, 1'b1,        3'bx} -> {18'bx, 3'b111});
