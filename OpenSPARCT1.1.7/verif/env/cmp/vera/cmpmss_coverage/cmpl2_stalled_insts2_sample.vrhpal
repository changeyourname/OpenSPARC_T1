// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: cmpl2_stalled_insts2_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================

// l2_stalled_insts2_state[25:0] = {8 stall bits,
//                                  arbctl_stall_c2, arbctl_inst_vld_c1, arbctl_inst_diag_c1,
//                                  arbdp_inst_c1[19:5]};
//
// each (C1) stall bit must be qualified with (!arbctl_stall_c2 & arbctl_inst_vld_c1)


// LOAD                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans LOAD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans LOAD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// PREFETCH                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans PREFETCH_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});
wildcard trans PREFETCH_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b1, 1'b0});

// DIAG_LOAD                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans DIAG_LOAD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_LOAD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b111, LOAD_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// DCACHE_INV                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans DCACHE_INV_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans DCACHE_INV_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, LOAD_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});

// IMISS                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans IMISS_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans IMISS_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// ICACHE_INV                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans ICACHE_INV_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});
wildcard trans ICACHE_INV_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, IMISS_RQ, 1'b0, 1'b0, 5'bx, 1'b1, 1'b0, 1'b0});

// STORE                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans STORE_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STORE_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// BLKSTORE                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans BLKSTORE_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});
wildcard trans BLKSTORE_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b1, 1'b1});

// BLKINITST                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans BLKINITST_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});
wildcard trans BLKINITST_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b1});

// DIAG_STORE                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans DIAG_STORE_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans DIAG_STORE_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b111, STORE_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// CAS1                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans CAS1_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS1_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS1_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// CAS2                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans CAS2_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans CAS2_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, CAS2_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// SWAP                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans SWAP_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans SWAP_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, SWAP_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// STRLOAD                                                              reqtype     nc    jbi   cputh inv   pf    bis
wildcard trans STRLOAD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRLOAD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRLOAD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// STRST                                                              reqtype   nc    jbi   cputh inv   pf    bis
wildcard trans STRST_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans STRST_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, STRST_RQ, 1'bx, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// FWDRQ_LOAD                                                              reqtype nc    jbi   cputh inv   pf    bis
wildcard trans FWDRQ_LOAD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_LOAD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// FWDRQ_STORE                                                              reqtype nc    jbi   cputh inv   pf    bis
wildcard trans FWDRQ_STORE_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_STORE_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// FWDRQ_DIAG_LOAD                                                           reqtype nc    jbi   cputh inv   pf    bis
wildcard trans FWDRQ_DIAGLD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGLD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b1, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// FWDRQ_DIAG_STORE                                                          reqtype nc    jbi   cputh inv   pf    bis
wildcard trans FWDRQ_DIAGST_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});
wildcard trans FWDRQ_DIAGST_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b111, FWD_RQ, 1'b0, 1'b0, 5'bx, 1'b0, 1'b0, 1'b0});

// RDD                                                              reqtype   nc    jbi
wildcard trans RDD_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});
wildcard trans RDD_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx001, 1'b0, 1'b1, 8'bx});

// WR8                                                              reqtype   nc    jbi
wildcard trans WR8_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});
wildcard trans WR8_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx010, 1'b0, 1'b1, 8'bx});

// WRI                                                              reqtype   nc    jbi
wildcard trans WRI_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});
wildcard trans WRI_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, 5'bxx100, 1'b0, 1'b1, 8'bx});

// FILL                                                              reqtype  nc    jbi   cputh inv   pf    bis
wildcard trans FILL_7({8'b1xxxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_6({8'bx1xxxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_5({8'bxx1xxxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_4({8'bxxx1xxxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_3({8'bxxxx1xxx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_2({8'bxxxxx1xx, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_1({8'bxxxxxx1x, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
wildcard trans FILL_0({8'bxxxxxxx1, 3'b01x, 15'bx} -> {8'bx, 3'b110, FILL,    1'bx, 1'b0, 5'bx, 1'bx, 1'bx, 1'bx});
