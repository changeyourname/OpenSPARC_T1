// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: cmpl2_pipeline_full_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================


// inst_vld_c1c2[1:0] = {arbctl_inst_vld_c1, arbctl_inst_vld_c2}

// coverage_def L2_PIPELINE_FULL_COV(bit [1:0] inst_vld_c1c2) {

             trans c1_thru_c2_c1stall(2'b11 -> 2'b10);
    wildcard trans c1_thru_c2_nostall(2'b11 -> 2'bx1);
             trans c1_thru_c3_c1stall(2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c3_nostall(2'b11 -> 2'b11 -> 2'bx1);
             trans c1_thru_c4_c1stall(2'b11 -> 2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c4_nostall(2'b11 -> 2'b11 -> 2'b11 -> 2'bx1);
             trans c1_thru_c5_c1stall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c5_nostall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'bx1);
             trans c1_thru_c6_c1stall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c6_nostall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'bx1);
             trans c1_thru_c7_c1stall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c7_nostall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'bx1);
             trans c1_thru_c8_c1stall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b10);
    wildcard trans c1_thru_c8_nostall(2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'b11 -> 2'bx1);
// }
