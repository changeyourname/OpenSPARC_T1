// ========== Copyright Header Begin ==========================================
// 
// OpenSPARC T1 Processor File: tlu_multi_intl_pevt_sample.vrhpal
// Copyright (c) 2006 Sun Microsystems, Inc.  All Rights Reserved.
// DO NOT ALTER OR REMOVE COPYRIGHT NOTICES.
// 
// The above named program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public
// License version 2 as published by the Free Software Foundation.
// 
// The above named program is distributed in the hope that it will be 
// useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public
// License along with this work; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
// 
// ========== Copyright Header End ============================================
//***************************************************************************
//
// State machine coverage for TLU multiple internal trap causing events
//
//
//***************************************************************************


// coverage_def TLU_MULTI_INTL_EVT_2_COV (bit [8:0] tlu_multi_intl_evt_2_st)
// {

  /////////
  // States

  wildcard state s_USER_PIC_OVFL_TRAP_AND_TLZ_TRAP	(USER_PIC_OVFL_TRAP_AND_TLZ_TRAP);
  wildcard state s_SUP_PIC_OVFL_TRAP_AND_TLZ_TRAP	(SUP_PIC_OVFL_TRAP_AND_TLZ_TRAP);

  wildcard state s_USER_IE1_PIC_OVFL_QCPU_MONDO_EVT	(USER_IE1_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard state s_USER_IE1_PIC_OVFL_QDEV_MONDO_EVT	(USER_IE1_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard state s_USER_IE1_PIC_OVFL_QRESUM_ERR_EVT	(USER_IE1_PIC_OVFL_QRESUM_ERR_EVT);

  wildcard state s_SUP_IE1_PIC_OVFL_QCPU_MONDO_EVT	(SUP_IE1_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard state s_SUP_IE1_PIC_OVFL_QDEV_MONDO_EVT	(SUP_IE1_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard state s_SUP_IE1_PIC_OVFL_QRESUM_ERR_EVT	(SUP_IE1_PIC_OVFL_QRESUM_ERR_EVT);

  //////////////
  // Transitions

  /////////////
  // Bad States
  wildcard bad_state s_SUP_IE0_PIC_OVFL_QCPU_MONDO_EVT	(SUP_IE0_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_SUP_IE0_PIC_OVFL_QDEV_MONDO_EVT	(SUP_IE0_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_SUP_IE0_PIC_OVFL_QRESUM_ERR_EVT	(SUP_IE0_PIC_OVFL_QRESUM_ERR_EVT);
  wildcard bad_state s_USER_IE0_PIC_OVFL_QCPU_MONDO_EVT	(USER_IE0_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_USER_IE0_PIC_OVFL_QDEV_MONDO_EVT	(USER_IE0_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_USER_IE0_PIC_OVFL_QRESUM_ERR_EVT	(USER_IE0_PIC_OVFL_QRESUM_ERR_EVT);

  wildcard bad_state s_HPV_IE1_PIC_OVFL_QCPU_MONDO_EVT	(HPV_IE1_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_HPV_IE1_PIC_OVFL_QDEV_MONDO_EVT	(HPV_IE1_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_HPV_IE1_PIC_OVFL_QRESUM_ERR_EVT	(HPV_IE1_PIC_OVFL_QRESUM_ERR_EVT);
  wildcard bad_state s_HPV_IE0_PIC_OVFL_QCPU_MONDO_EVT	(HPV_IE0_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_HPV_IE0_PIC_OVFL_QDEV_MONDO_EVT	(HPV_IE0_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_HPV_IE0_PIC_OVFL_QRESUM_ERR_EVT	(HPV_IE0_PIC_OVFL_QRESUM_ERR_EVT);

  wildcard bad_state s_HPL_IE1_PIC_OVFL_QCPU_MONDO_EVT	(HPL_IE1_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_HPL_IE1_PIC_OVFL_QDEV_MONDO_EVT	(HPL_IE1_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_HPL_IE1_PIC_OVFL_QRESUM_ERR_EVT	(HPL_IE1_PIC_OVFL_QRESUM_ERR_EVT);
  wildcard bad_state s_HPL_IE0_PIC_OVFL_QCPU_MONDO_EVT	(HPL_IE0_PIC_OVFL_QCPU_MONDO_EVT);
  wildcard bad_state s_HPL_IE0_PIC_OVFL_QDEV_MONDO_EVT	(HPL_IE0_PIC_OVFL_QDEV_MONDO_EVT);
  wildcard bad_state s_HPL_IE0_PIC_OVFL_QRESUM_ERR_EVT	(HPL_IE0_PIC_OVFL_QRESUM_ERR_EVT);


  ///////////////////
  // Bad Transitions 

// }
